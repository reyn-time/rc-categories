syntax = "proto3";

package patientappointment.v1;

import "google/protobuf/timestamp.proto";
import "proto/patient/v1/patient.proto";
import "proto/auth/v1/auth.proto";

service PatientAppointmentService {
    rpc ListCurrentPatientAppointment(ListCurrentPatientAppointmentRequest) returns (ListCurrentPatientAppointmentResponse) {
        option (auth.v1.auth_enabled) = true;
    }
    // TODO: Allow users to sign up to, or cancel appointments.
    rpc CreatePatientAppointment(CreatePatientAppointmentRequest) returns (CreatePatientAppointmentResponse) {
        option (auth.v1.auth_enabled) = true;
    }
    rpc UpdatePatientAppointment(UpdatePatientAppointmentRequest) returns (UpdatePatientAppointmentResponse) {
        option (auth.v1.auth_enabled) = true;
    }
    rpc DeletePatientAppointment(DeletePatientAppointmentRequest) returns (DeletePatientAppointmentResponse) {
        option (auth.v1.auth_enabled) = true;
    }
}

message ListCurrentPatientAppointmentRequest {
}

message ListCurrentPatientAppointmentResponse {
    repeated PatientAppointment appointments = 1;
}

message CreatePatientAppointmentRequest {
    google.protobuf.Timestamp start_time = 1;
    int32 patient_id = 2;
}

message CreatePatientAppointmentResponse {
}

message UpdatePatientAppointmentRequest {
    int32 id = 1;
    google.protobuf.Timestamp start_time = 2;
}

message UpdatePatientAppointmentResponse {
}

message DeletePatientAppointmentRequest {
    int32 id = 1;
}

message DeletePatientAppointmentResponse {
}

message PatientAppointment {
    int32 id = 3;
    google.protobuf.Timestamp start_time = 1;
    int32 meeting_number = 4;
    int32 patient_id = 2;
}